# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# trigger:
#   tags:
#     include:
#       - v2.*
#     exclude:
#       - v2.0
#   batch: true
#   branches:
#     include:
#       - master
#       - release/*
#     exclude:
#       - release/old*
#   paths:
#     include:
#       - docs
#     exclude:
#       - docs/README.md

# jobs:
# - job: 
#   condition: and(succeeded(),ne(variables['Build.Reason'],'PullRequest'))
#   steps:
#     - checkout: https://github.com/Zheng-Li01/pipelines-java
#     - script: echo Hello Word
#   uses:
#     repositories:
#       - pipelines-java

# - job: 
#   workspace:
#     clean: outputs 
#   steps:
#     - checkout: self
#       clean: true
#       fetchDepth: 25000
#       lfs: false
#       submodules: true
#       path: $(Agent.BuildDirectory)\_work\1
#       persistCredentials: true
# trigger: none

# jobs:
# - job:
#   condition: false
#   displayName: 'macOS'
#   pool:
#     vmImage:  'masOS-latest'
#   steps:
#     - template: azure-pipelines-steps.mac.yml

# - job: 
#   condition: true
#   displayName: 'Linux'
#   pool:
#     vmImage:  'ubuntu-latest'
#   steps:
#     - template: azure-pipelines.steps.linux.yml


# parameters:
#   - name: succeed
#     displayName: Succeed or fail
#     type: boolean
#     default: false

# trigger:
# - main

# pool:
#   vmImage:  ubuntu-latest

# jobs:
# - job: Work
#   steps:
#   - script: echo Hello, word!
#     displayName: 'Run a one0line script'

#   - script: git clone malformed input
#     condition: eq(${{parameters.succeed}},false)

# - job: ErrrorHander
#   dependsOn: Work
#   condition: failed()
#   steps:
#   - bash: |
#       az boards work-item create \
#         --titile "Build $(build.buildNumber) failed" \
#         -- type bug \
#         -- org $(System.TeamFoundtionCollectionUri) \
#         -- project $(System.TeamProject)
#       env:
#         AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
#       disdisplayName: 'Create work item on filure'

schedules:
  - cron: "0 18 * * *"
    displayName: Weekly Sunday build
    batch: false
    always: true

trigger:
- main
- release/*

strategy:
  matrix:
    jdk10_linux:
      imageName: "ubuntu-latest"
      jdkVersion: "1.10"
    jdk11_windows:
      imageName: "windows-latest"
      jdkVersion: "1.11"
  maxParallel: 2

pool:
  vmImage: $(imageName)


steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: "1.8"
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: "JaCoCo"
    summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
    reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
    failIfCoverageEmpty: true
    