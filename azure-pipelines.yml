#azure-pipeline.yml

trigger: none

pool:
  vmImage: ubuntu-latest

extends:
  template: testing-template.yml
  parameters:
    testSet:
    - job: positive_test
      templateContext:
        expectedHTTPResponseCode: 200
      steps:
      - script: echo "Run positive test" 
    - job: negative_test
      templateContext:
        expectedHTTPResponseCode: 500
      steps:
      - script: echo "Run negative test"
# File: azure-pipelines.yml
# trigger:
# - main

# extends:
#   template: start.yml
#   parameters:
#     buildSteps:  
#       - bash: echo Test #Passes
#         displayName: succeed
#       - bash: echo "Test"
#         displayName: succeed
      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'
      # - task: CmdLine@2
      #   inputs:
      #     script: echo "Script Test"
      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'
      # - script: echo "Script Test"
# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# trigger:
#   tags:
#     include:
#       - v2.*
#     exclude:
#       - v2.0
#   batch: true
#   branches:
#     include:
#       - master
#       - release/*
#     exclude:
#       - release/old*
#   paths:
#     include:
#       - docs
#     exclude:
#       - docs/README.md

# jobs:
# - job: 
#   condition: and(succeeded(),ne(variables['Build.Reason'],'PullRequest'))
#   steps:
#     - checkout: https://github.com/Zheng-Li01/pipelines-java
#     - script: echo Hello Word
#   uses:
#     repositories:
#       - pipelines-java

# - job: 
#   workspace:
#     clean: outputs 
#   steps:
#     - checkout: self
#       clean: true
#       fetchDepth: 25000
#       lfs: false
#       submodules: true
#       path: $(Agent.BuildDirectory)\_work\1
#       persistCredentials: true
# trigger: none

# jobs:
# - job:
#   condition: false
#   displayName: 'macOS'
#   pool:
#     vmImage:  'masOS-latest'
#   steps:
#     - template: azure-pipelines-steps.mac.yml

# - job: 
#   condition: true
#   displayName: 'Linux'
#   pool:
#     vmImage:  'ubuntu-latest'
#   steps:
#     - template: azure-pipelines.steps.linux.yml


# parameters:
#   - name: succeed
#     displayName: Succeed or fail
#     type: boolean
#     default: false

# trigger:
# - main

# pool:
#   vmImage:  ubuntu-latest

# jobs:
# - job: Work
#   steps:
#   - script: echo Hello, word!
#     displayName: 'Run a one0line script'

#   - script: git clone malformed input
#     condition: eq(${{parameters.succeed}},false)

# - job: ErrrorHander
#   dependsOn: Work
#   condition: failed()
#   steps:
#   - bash: |
#       az boards work-item create \
#         --titile "Build $(build.buildNumber) failed" \
#         -- type bug \
#         -- org $(System.TeamFoundtionCollectionUri) \
#         -- project $(System.TeamProject)
#       env:
#         AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
#       disdisplayName: 'Create work item on filure'

# schedules:
#   - cron: "0 18 * * *"
#     displayName: Weekly Sunday build
#     batch: false
#     always: true
# schedules:
# - cron: "0 0 * * *"
#   displayName: Daily midnight build
#   branches:
#     include:
#     - main
#   always: true


# trigger:
# - main



# parameters:
#   - name: experimentalTemplate
#     displayName: '?'
#     type: boolean
#     default: false
#     values:
#       - true
#       - false
# strategy:
#   matrix:
#     jdk10_linux:
#       imageName: "ubuntu-latest"
#       jdkVersion: "1.10"
#     jdk11_windows:
#       imageName: "windows-latest"
#       jdkVersion: "1.11"
#   maxParallel: 2

# pool:
#   vmImage: $(imageName)


# resources:
#   containers:
#     - container: pycontiner
#       image: python:3.8
      

# resources:
#   pipelines:
#     - pipeline: securitylib
#       source: security-ci
#       project: testing1
#       trigger: true

# steps:
# # - ${{ if eq (parameters.experimentalTemplate, true)}}
# #   - template: simple-param.yml
#   - task: Maven@3
#     inputs:
#       mavenPomFile: 'pom.xml'
#       mavenOptions: '-Xmx3072m'
#       javaHomeOption: 'JDKVersion'
#       jdkVersionOption: "1.8"
#       jdkArchitectureOption: 'x64'
#       publishJUnitResults: true
#       testResultsFiles: '**/surefire-reports/TEST-*.xml'
#       goals: 'package'
#   - bash: echo "runs first"
#   # - task: CmdLine@2
#   - task: NodeTool@0
#     displayName:  Node install
#     inputs:
#       versionSpec: '6.x'
#   #   inputs:
#   #     script: |
#   #       echo Write your commands here
        
#   #       echo Hello world
#   #       az pipelines variable-group list --output table
#   #     failOnStderr: true



#   # - task: SqlAzureDacpacDeployment@1
#   #   retryCountOnTaskFailure: 0
    
#   # - task: UsePythonVersion@0
#   #   inputs:
#   #     versionSpec: '3.7'
#   #     architecture: 'x64'
#   # - task: PublishTestResults@2
#   #   inputs:
#   #     testResultsFiles: "**/TEST-*.xml"
#   #   condition: succeededOrFailed()
#   - task: PublishCodeCoverageResults@1
#     inputs:
#       codeCoverageTool: "JaCoCo"
#       summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
#       reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
#       failIfCoverageEmpty: true
    